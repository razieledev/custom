-
  To test the Mexican Electronic Invoice cbb
-
  I check that Journal is cbb
-
  !assert {model: account.invoice, id: account_invoice_cbb0}:
    - journal_id.id == ref('l10n_mx_cbb_journal_0')
-
  I check that Initially customer invoice state is "Draft"
-
  !assert {model: account.invoice, id: account_invoice_cbb0}:
    - state == 'draft'
-
  I open invoice by clicking on Create button
-
  !workflow {model: account.invoice, action: invoice_open, ref: account_invoice_cbb0}
-
  I check that the invoice state is "Open"
-
  !assert {model: account.invoice, id: account_invoice_cbb0}:
    - state == 'open'
-
  I confirm l10n_mx attachment facturae cbb by clicking on confirm button
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc, tools, os, base64
    wf_service = netsvc.LocalService("workflow")
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    if cbb_id:
        cbb = self.browse(cr, uid, [cbb_id])[0]
        self.signal_confirm(cr, uid , cbb_ids ,context=context)
        #print "cbb_state",tools.ustr(cbb.state)
        #print "cbb_msj",tools.ustr(cbb.msj)
        state = cbb.state
-
  I check that the state in l10n_mx attachment facturae cbb is "Confirmed"
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc, tools, os, base64
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    state = 'no attach file'
    if cbb_id:
        cbb = self.browse(cr, uid, [cbb_id])[0]
        #print "cbb_state",tools.ustr(cbb.state)
        #print "cbb_msj",tools.ustr(cbb.msj)
        state = cbb.state
        #This state no generate a new attch
        #ir_attach_facturae_mx = cbb.file_input and cbb.file_input or False
        #fdata = ir_attach_facturae_mx and ir_attach_facturae_mx.db_datas or False
        #if fdata:
            #if tools.config['test_report_directory']:
                #open(os.path.join(tools.config['test_report_directory'], 'l10n_mx_facturae_cbb' + '_' + \
                  #'account_invoice_cbb0' + '_' + 'confirmed' + '-' + ir_attach_facturae_mx.datas_fname)\
                  #, 'wb+').write( base64.decodestring( fdata ) )
        #else:
            #state = 'no data in attach file'
    assert state=='confirmed', 'No confirmed state l10n_mx attachment facturae cbb'
-
  I sign l10n_mx attachment facturae cbb by clicking on sign button
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc, tools
    wf_service = netsvc.LocalService("workflow")
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    if cbb_id:
        cbb = self.browse(cr, uid, [cbb_id], context=context)[0]
        self.signal_sign(cr, uid, cbb_ids, context=context)
        #print "cbb_state",tools.ustr(cbb.state)
        #print "cbb_msj",tools.ustr(cbb.msj)
        state = cbb.state
-
  I check that the state in l10n_mx attachment facturae cbb is "Signed"
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc, tools, os, base64
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = len(cbb_ids) and cbb_ids[0] or False
    state = 'no attach file'
    if cbb_id:
        cbb = self.browse(cr, uid, [cbb_id], context=context)[0]
        state = cbb.state
        ir_attach_facturae_mx = cbb.file_xml_sign and cbb.file_xml_sign or False
        fdata = ir_attach_facturae_mx and ir_attach_facturae_mx.db_datas or False
        #~ if fdata:
            #~ if tools.config['test_report_directory']:
                #~ open(os.path.join(tools.config['test_report_directory'], 'l10n_mx_facturae_cbb' + '_' + \
                  #~ 'account_invoice_cbb0' + '_' + 'signed' + '-' + ir_attach_facturae_mx.datas_fname),\
                  #~ 'wb+').write( base64.decodestring( fdata ) )
        #~ else:
            #~ state = 'no data in attach file'
    #print "state",tools.ustr(state)
    assert state=='signed', 'No signed state l10n_mx attachment facturae cbb'
-
  I generate a printable l10n_mx attachment facturae cbb by clicking on printable button
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc, tools
    wf_service = netsvc.LocalService("workflow")
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    if cbb_id:
        cbb = self.browse(cr, uid, [cbb_id])[0]
        self.signal_printable(cr, uid , cbb_ids ,context=context)
        #print "cbb_state",tools.ustr(cbb.state)
        #print "cbb_msj",tools.ustr(cbb.msj)
        state = cbb.state
-
  I check that the state in l10n_mx attachment facturae cbb is Printable
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc, tools, os, base64
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    state = None
    state = 'no attach file'
    if cbb_id:
        cbb = self.browse(cr, uid, [cbb_id], context=context)[0]
        ir_attach_facturae_mx = cbb.file_pdf and cbb.file_pdf or False
        fdata = ir_attach_facturae_mx and ir_attach_facturae_mx.db_datas or False
        state = cbb.state
        if fdata:
            if tools.config['test_report_directory']:
                open(os.path.join(tools.config['test_report_directory'], 'l10n_mx_facturae_cbb' + '_' + \
                  'account_invoice_cbb0' + '_' + 'printable' + '-' + ir_attach_facturae_mx.datas_fname),\
                  'wb+').write( base64.decodestring( fdata ) )
        else:
            state = 'no data in attach file'
    assert state=='printable', 'No printable state l10n_mx attachment facturae cbb'
-
  I added update_posted in journal
-
  !python {model: account.journal}: |
    journal_id = self.browse(cr, uid, ref('l10n_mx_cbb_journal_0'))
    self.write(cr, uid, journal_id.id, {'update_posted': True})
-
  I generate a cancel l10n_mx attachment facturae cbb by clicking on cancel button
-
  !python {model: ir.attachment.facturae.mx}: |
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    if cbb_id:
        self.signal_cancel(cr, uid , cbb_ids ,context=context)
        cbb = self.browse(cr, uid, [cbb_id])[0]
        state = cbb.state
    assert state=='cancel', 'No cancel state l10n_mx attachment facturae cbb'
-
  I check that customer invoice state is "cancel"
-
  !assert {model: account.invoice, id: account_invoice_cbb0}:
    - state == 'cancel'
-
  I check that customer invoice move_id is None
-
  !assert {model: account.invoice, id: account_invoice_cbb0}:
    - move_id.name == None
